{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","this","props","name","handleClockNameChange","handleDateChange","document","addEventListener","hideClock","showClock","prevProps","console","debug","handleDateTimerStop","today","className","toUTCString","slice","React","PureComponent","getRandomName","value","Date","now","toString","App","state","hasClock","clockName","dateTimerId","event","preventDefault","setState","window","setInterval","info","clearInterval","Component","ReactDOM","render","getElementById"],"mappings":"sNAYaA,EAAb,uKACE,WAC0B,YAApBC,KAAKC,MAAMC,MACbF,KAAKC,MAAME,wBAGbH,KAAKC,MAAMG,mBACXC,SAASC,iBAAiB,cAAeN,KAAKC,MAAMM,WACpDF,SAASC,iBAAiB,QAASN,KAAKC,MAAMO,aARlD,gCAWE,SAAmBC,GACbA,EAAUP,OAASF,KAAKC,MAAMC,MAEhCQ,QAAQC,MAAR,uBAA8BF,EAAUP,KAAxC,eAAmDF,KAAKC,MAAMC,SAdpE,kCAkBE,WACEF,KAAKC,MAAMW,wBAnBf,oBAsBE,WACE,MAAwBZ,KAAKC,MAArBY,EAAR,EAAQA,MAAOX,EAAf,EAAeA,KAEf,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,IAGF,YAED,sBAAMY,UAAU,cAAhB,SACGD,EAAME,cAAcC,OAAO,IAAK,YAlC3C,GAA2BC,IAAMC,eCFjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAGX,IAAMI,EAAb,4MACEC,MAAe,CACbC,UAAU,EACVb,MAAO,IAAIQ,KACXM,UAAW,WAJf,EAOEC,YAAc,EAPhB,EASErB,UAAY,SAACsB,GACXA,EAAMC,iBAEN,EAAKC,SAAS,CAAEL,UAAU,KAZ9B,EAeElB,UAAY,WACV,EAAKuB,SAAS,CACZL,UAAU,EACVb,MAAO,IAAIQ,QAlBjB,EAsBEjB,iBAAmB,WACjB,EAAKwB,YAAcI,OAAOC,aAAY,WACpC,EAAKF,SAAS,CAAElB,MAAO,IAAIQ,OAE3BX,QAAQwB,KAAK,EAAKT,MAAMZ,MAAME,cAAcC,OAAO,IAAK,MACvD,MA3BP,EA8BEb,sBAAwB,WACtB8B,aAAY,WACV,EAAKF,SAAS,CAAEJ,UAAWR,QAC1B,OAjCP,EAoCEP,oBAAsB,WACpBoB,OAAOG,cAAc,EAAKP,cArC9B,4CAwCE,WACE,MAII5B,KAAKyB,MAHPC,EADF,EACEA,SACAb,EAFF,EAEEA,MACAc,EAHF,EAGEA,UAGF,OACE,sBAAKb,UAAU,MAAf,UACE,6CAECY,GACC,cAAC,EAAD,CACEtB,iBAAkBJ,KAAKI,iBACvBD,sBAAuBH,KAAKG,sBAC5BS,oBAAqBZ,KAAKY,oBAC1BL,UAAWP,KAAKO,UAChBC,UAAWR,KAAKQ,UAChBK,MAAOA,EACPX,KAAMyB,WA3DlB,GAAyBV,IAAMmB,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAjC,SAASkC,eAAe,W","file":"static/js/main.f96199ec.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  handleDateChange: () => void,\n  handleClockNameChange: () => void,\n  handleDateTimerStop: () => void,\n  hideClock: (arg0: MouseEvent) => void,\n  showClock: () => void,\n  today: Date,\n  name: string,\n};\n\nexport class Clock extends React.PureComponent<Props> {\n  componentDidMount(): void {\n    if (this.props.name === 'Clock-0') {\n      this.props.handleClockNameChange();\n    }\n\n    this.props.handleDateChange();\n    document.addEventListener('contextmenu', this.props.hideClock);\n    document.addEventListener('click', this.props.showClock);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.props.handleDateTimerStop();\n  }\n\n  render() {\n    const { today, name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n  today: Date,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    hasClock: true,\n    today: new Date(),\n    clockName: 'Clock-0',\n  };\n\n  dateTimerId = 0;\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({\n      hasClock: true,\n      today: new Date(),\n    });\n  };\n\n  handleDateChange = () => {\n    this.dateTimerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  };\n\n  handleClockNameChange = () => {\n    setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  };\n\n  handleDateTimerStop = () => {\n    window.clearInterval(this.dateTimerId);\n  };\n\n  render() {\n    const {\n      hasClock,\n      today,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock\n            handleDateChange={this.handleDateChange}\n            handleClockNameChange={this.handleClockNameChange}\n            handleDateTimerStop={this.handleDateTimerStop}\n            hideClock={this.hideClock}\n            showClock={this.showClock}\n            today={today}\n            name={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}